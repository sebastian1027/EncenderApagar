

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Aug 30 12:41:52 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.43
    15                           ; Generated 25/07/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0007                     _PORTCbits	set	7
   127  0007                     _PORTC	set	7
   128  0006                     _PORTB	set	6
   129  0018                     _RCSTAbits	set	24
   130  0019                     _TXREG	set	25
   131  000C                     _PIR1bits	set	12
   132  0087                     _TRISC	set	135
   133  0086                     _TRISB	set	134
   134  0098                     _TXSTAbits	set	152
   135                           
   136                           	psect	strings
   137  0003                     __pstrings:	
   138  0003                     stringtab:	
   139  0003                     __stringtab:	
   140  0003                     stringcode:	
   141                           ;	String table - string pointers are 1 byte each
   142                           
   143  0003                     stringdir:	
   144  0003  3000               	movlw	high stringdir
   145  0004  008A               	movwf	10
   146  0005  0804               	movf	4,w
   147  0006  0A84               	incf	4,f
   148  0007  0782               	addwf	2,f
   149  0008                     __stringbase:	
   150  0008  3400               	retlw	0
   151  0009                     __end_of__stringtab:	
   152  0009                     STR_2:	
   153  0009  344C               	retlw	76	;'L'
   154  000A  346F               	retlw	111	;'o'
   155  000B  3473               	retlw	115	;'s'
   156  000C  3420               	retlw	32	;' '
   157  000D  346C               	retlw	108	;'l'
   158  000E  3465               	retlw	101	;'e'
   159  000F  3464               	retlw	100	;'d'
   160  0010  3473               	retlw	115	;'s'
   161  0011  3420               	retlw	32	;' '
   162  0012  3465               	retlw	101	;'e'
   163  0013  3473               	retlw	115	;'s'
   164  0014  3474               	retlw	116	;'t'
   165  0015  3461               	retlw	97	;'a'
   166  0016  346E               	retlw	110	;'n'
   167  0017  3420               	retlw	32	;' '
   168  0018  3465               	retlw	101	;'e'
   169  0019  346E               	retlw	110	;'n'
   170  001A  3463               	retlw	99	;'c'
   171  001B  3465               	retlw	101	;'e'
   172  001C  346E               	retlw	110	;'n'
   173  001D  3464               	retlw	100	;'d'
   174  001E  3469               	retlw	105	;'i'
   175  001F  3464               	retlw	100	;'d'
   176  0020  346F               	retlw	111	;'o'
   177  0021  3473               	retlw	115	;'s'
   178  0022  340A               	retlw	10
   179  0023  3400               	retlw	0
   180  0024                     STR_1:	
   181  0024  344C               	retlw	76	;'L'
   182  0025  346F               	retlw	111	;'o'
   183  0026  3473               	retlw	115	;'s'
   184  0027  3420               	retlw	32	;' '
   185  0028  346C               	retlw	108	;'l'
   186  0029  3465               	retlw	101	;'e'
   187  002A  3464               	retlw	100	;'d'
   188  002B  3473               	retlw	115	;'s'
   189  002C  3420               	retlw	32	;' '
   190  002D  3465               	retlw	101	;'e'
   191  002E  3473               	retlw	115	;'s'
   192  002F  3474               	retlw	116	;'t'
   193  0030  3461               	retlw	97	;'a'
   194  0031  346E               	retlw	110	;'n'
   195  0032  3420               	retlw	32	;' '
   196  0033  3461               	retlw	97	;'a'
   197  0034  3470               	retlw	112	;'p'
   198  0035  3461               	retlw	97	;'a'
   199  0036  3467               	retlw	103	;'g'
   200  0037  3461               	retlw	97	;'a'
   201  0038  3464               	retlw	100	;'d'
   202  0039  346F               	retlw	111	;'o'
   203  003A  3473               	retlw	115	;'s'
   204  003B  340A               	retlw	10
   205  003C  3400               	retlw	0
   206                           
   207                           	psect	cinit
   208  07FA                     start_initialization:	
   209                           ; #config settings
   210                           
   211  07FA                     __initialization:	
   212                           
   213                           ; Clear objects allocated to COMMON
   214  07FA  01F5               	clrf	__pbssCOMMON& (0+127)
   215  07FB  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   216  07FC                     end_of_initialization:	
   217                           ;End of C runtime variable initialization code
   218                           
   219  07FC                     __end_of__initialization:	
   220  07FC  0183               	clrf	3
   221  07FD  120A  118A  2FC6   	ljmp	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMMON
   224  0075                     __pbssCOMMON:	
   225  0075                     _estado_boton:	
   226  0075                     	ds	2
   227                           
   228                           	psect	cstackCOMMON
   229  0070                     __pcstackCOMMON:	
   230  0070                     ?_putch:	
   231  0070                     ??_putch:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?_iniciar_uart:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ??_iniciar_uart:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_main:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?_printf:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     putch@dato:	
   247                           ; 2 bytes @ 0x0
   248                           
   249                           
   250                           ; 1 bytes @ 0x0
   251  0070                     	ds	1
   252  0071                     ??_printf:	
   253                           
   254                           ; 1 bytes @ 0x1
   255  0071                     	ds	1
   256  0072                     printf@ap:	
   257                           
   258                           ; 1 bytes @ 0x2
   259  0072                     	ds	1
   260  0073                     printf@c:	
   261                           
   262                           ; 1 bytes @ 0x3
   263  0073                     	ds	1
   264  0074                     printf@f:	
   265                           
   266                           ; 1 bytes @ 0x4
   267  0074                     	ds	1
   268  0075                     ??_main:	
   269                           
   270                           	psect	maintext
   271  07C6                     __pmaintext:	
   272                           ; 1 bytes @ 0x5
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 14 in file "EncenderApagar.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   287 ;; Tracked objects:
   288 ;;		On entry : B00/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   292 ;;      Params:         0       0       0       0       0
   293 ;;      Locals:         0       0       0       0       0
   294 ;;      Temps:          0       0       0       0       0
   295 ;;      Totals:         0       0       0       0       0
   296 ;;Total ram usage:        0 bytes
   297 ;; Hardware stack levels required when called:    2
   298 ;; This function calls:
   299 ;;		_iniciar_uart
   300 ;;		_printf
   301 ;; This function is called by:
   302 ;;		Startup code after reset
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           
   307                           ;psect for function _main
   308  07C6                     _main:	
   309                           
   310                           ;EncenderApagar.c: 15: iniciar_uart();
   311                           
   312                           ;incstack = 0
   313                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   314  07C6  120A  118A  279B  120A  118A  	fcall	_iniciar_uart
   315                           
   316                           ;EncenderApagar.c: 16: TRISB = 0b00000000;
   317  07CB  1683               	bsf	3,5	;RP0=1, select bank1
   318  07CC  1303               	bcf	3,6	;RP1=0, select bank1
   319  07CD  0186               	clrf	6	;volatile
   320                           
   321                           ;EncenderApagar.c: 17: PORTB = 0;
   322  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   323  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   324  07D0  0186               	clrf	6	;volatile
   325                           
   326                           ;EncenderApagar.c: 18: TRISC = 1;
   327  07D1  3001               	movlw	1
   328  07D2  1683               	bsf	3,5	;RP0=1, select bank1
   329  07D3  1303               	bcf	3,6	;RP1=0, select bank1
   330  07D4  0087               	movwf	7	;volatile
   331                           
   332                           ;EncenderApagar.c: 19: PORTC = 0;
   333  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   334  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   335  07D7  0187               	clrf	7	;volatile
   336  07D8                     l566:	
   337                           ;EncenderApagar.c: 21: while (1){
   338                           
   339                           
   340                           ;EncenderApagar.c: 23: if (PORTCbits.RC0 == 0){
   341  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   342  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   343  07DA  1807               	btfsc	7,0	;volatile
   344  07DB  2FE3               	goto	l572
   345                           
   346                           ;EncenderApagar.c: 24: PORTB = 0B00000000;
   347  07DC  0186               	clrf	6	;volatile
   348                           
   349                           ;EncenderApagar.c: 25: printf("Los leds estan apagados\n");
   350  07DD  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   351  07DE  120A  118A  27AA  120A  118A  	fcall	_printf
   352  07E3                     l572:	
   353                           
   354                           ;EncenderApagar.c: 26: }
   355                           ;EncenderApagar.c: 28: if (PORTCbits.RC0 == 1){
   356  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   357  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   358  07E5  1C07               	btfss	7,0	;volatile
   359  07E6  2FED               	goto	l576
   360                           
   361                           ;EncenderApagar.c: 29: estado_boton++;
   362  07E7  3001               	movlw	1
   363  07E8  07F5               	addwf	_estado_boton,f
   364  07E9  1803               	skipnc
   365  07EA  0AF6               	incf	_estado_boton+1,f
   366  07EB  3000               	movlw	0
   367  07EC  07F6               	addwf	_estado_boton+1,f
   368  07ED                     l576:	
   369                           
   370                           ;EncenderApagar.c: 30: }
   371                           ;EncenderApagar.c: 32: if (estado_boton == 1){
   372  07ED  0375               	decf	_estado_boton,w
   373  07EE  0476               	iorwf	_estado_boton+1,w
   374  07EF  1D03               	btfss	3,2
   375  07F0  2FD8               	goto	l566
   376                           
   377                           ;EncenderApagar.c: 33: PORTB = 0B11111111;
   378  07F1  30FF               	movlw	255
   379  07F2  0086               	movwf	6	;volatile
   380                           
   381                           ;EncenderApagar.c: 34: printf("Los leds estan encendidos\n");
   382  07F3  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   383  07F4  120A  118A  27AA  120A  118A  	fcall	_printf
   384  07F9  2FD8               	goto	l566
   385  07FA                     __end_of_main:	
   386                           
   387                           	psect	text1
   388  07AA                     __ptext1:	
   389 ;; *************** function _printf *****************
   390 ;; Defined at:
   391 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;  f               1    wreg     PTR const unsigned char 
   394 ;;		 -> STR_2(27), STR_1(25), 
   395 ;; Auto vars:     Size  Location     Type
   396 ;;  f               1    4[COMMON] PTR const unsigned char 
   397 ;;		 -> STR_2(27), STR_1(25), 
   398 ;;  tmpval          4    0        struct .
   399 ;;  cp              2    0        PTR const unsigned char 
   400 ;;  len             2    0        unsigned int 
   401 ;;  val             2    0        unsigned int 
   402 ;;  c               1    3[COMMON] char 
   403 ;;  ap              1    2[COMMON] PTR void [1]
   404 ;;		 -> ?_printf(2), 
   405 ;;  flag            1    0        unsigned char 
   406 ;;  prec            1    0        char 
   407 ;; Return value:  Size  Location     Type
   408 ;;                  2   20[None  ] int 
   409 ;; Registers used:
   410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   416 ;;      Params:         0       0       0       0       0
   417 ;;      Locals:         3       0       0       0       0
   418 ;;      Temps:          1       0       0       0       0
   419 ;;      Totals:         4       0       0       0       0
   420 ;;Total ram usage:        4 bytes
   421 ;; Hardware stack levels used:    1
   422 ;; Hardware stack levels required when called:    1
   423 ;; This function calls:
   424 ;;		_putch
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           
   431                           ;psect for function _printf
   432  07AA                     _printf:	
   433                           
   434                           ;incstack = 0
   435                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   436                           ;printf@f stored from wreg
   437  07AA  00F4               	movwf	printf@f
   438                           
   439                           ;doprnt.c: 466: va_list ap;
   440                           ;doprnt.c: 499: signed char c;
   441                           ;doprnt.c: 506: signed char prec;
   442                           ;doprnt.c: 508: unsigned char flag;
   443                           ;doprnt.c: 523: union {
   444                           ;doprnt.c: 524: unsigned long vd;
   445                           ;doprnt.c: 525: double integ;
   446                           ;doprnt.c: 526: } tmpval;
   447                           ;doprnt.c: 528: unsigned int val;
   448                           ;doprnt.c: 529: unsigned len;
   449                           ;doprnt.c: 530: const char * cp;
   450                           ;doprnt.c: 533: *ap = __va_start();
   451  07AB  3070               	movlw	(low (?_printf| 0))& (0+255)
   452  07AC  00F1               	movwf	??_printf
   453  07AD  0871               	movf	??_printf,w
   454  07AE  00F2               	movwf	printf@ap
   455  07AF                     l554:	
   456                           ;doprnt.c: 543: }
   457                           ;doprnt.c: 1422: {
   458                           
   459                           ;doprnt.c: 542: continue;
   460                           
   461                           ;doprnt.c: 536: while(c = *f++) {
   462                           
   463  07AF  3001               	movlw	1
   464  07B0  07F4               	addwf	printf@f,f
   465  07B1  30FF               	movlw	-1
   466  07B2  0774               	addwf	printf@f,w
   467  07B3  0084               	movwf	4
   468  07B4  120A  118A  2003  120A  118A  	fcall	stringdir
   469  07B9  00F1               	movwf	??_printf
   470  07BA  0871               	movf	??_printf,w
   471  07BB  00F3               	movwf	printf@c
   472  07BC  0873               	movf	printf@c,w
   473  07BD  1903               	btfsc	3,2
   474  07BE  0008               	return
   475                           
   476                           ;doprnt.c: 540: {
   477                           ;doprnt.c: 541: (putch(c) );
   478  07BF  0873               	movf	printf@c,w
   479  07C0  120A  118A  27A2  120A  118A  	fcall	_putch
   480  07C5  2FAF               	goto	l554
   481  07C6                     __end_of_printf:	
   482                           ;doprnt.c: 1469: }
   483                           ;doprnt.c: 1533: }
   484                           ;doprnt.c: 1540: return 0;
   485                           ;	Return value of _printf is never used
   486                           
   487                           
   488                           	psect	text2
   489  07A2                     __ptext2:	
   490 ;; *************** function _putch *****************
   491 ;; Defined at:
   492 ;;		line 28 in file "config.h"
   493 ;; Parameters:    Size  Location     Type
   494 ;;  dato            1    wreg     unsigned char 
   495 ;; Auto vars:     Size  Location     Type
   496 ;;  dato            1    0[COMMON] unsigned char 
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   506 ;;      Params:         0       0       0       0       0
   507 ;;      Locals:         1       0       0       0       0
   508 ;;      Temps:          0       0       0       0       0
   509 ;;      Totals:         1       0       0       0       0
   510 ;;Total ram usage:        1 bytes
   511 ;; Hardware stack levels used:    1
   512 ;; This function calls:
   513 ;;		Nothing
   514 ;; This function is called by:
   515 ;;		_printf
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           
   520                           ;psect for function _putch
   521  07A2                     _putch:	
   522                           
   523                           ;incstack = 0
   524                           ; Regs used in _putch: [wreg]
   525                           ;putch@dato stored from wreg
   526  07A2  00F0               	movwf	putch@dato
   527  07A3                     l23:	
   528                           ;config.h: 30: continue;
   529                           
   530                           ;config.h: 29: while (! PIR1bits.TXIF)
   531                           
   532  07A3  1283               	bcf	3,5	;RP0=0, select bank0
   533  07A4  1303               	bcf	3,6	;RP1=0, select bank0
   534  07A5  1E0C               	btfss	12,4	;volatile
   535  07A6  2FA3               	goto	l23
   536                           
   537                           ;config.h: 31: TXREG = dato;
   538  07A7  0870               	movf	putch@dato,w
   539  07A8  0099               	movwf	25	;volatile
   540  07A9  0008               	return
   541  07AA                     __end_of_putch:	
   542                           
   543                           	psect	text3
   544  079B                     __ptext3:	
   545 ;; *************** function _iniciar_uart *****************
   546 ;; Defined at:
   547 ;;		line 34 in file "config.h"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		None
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0
   564 ;;      Totals:         0       0       0       0       0
   565 ;;Total ram usage:        0 bytes
   566 ;; Hardware stack levels used:    1
   567 ;; This function calls:
   568 ;;		Nothing
   569 ;; This function is called by:
   570 ;;		_main
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           
   575                           ;psect for function _iniciar_uart
   576  079B                     _iniciar_uart:	
   577                           
   578                           ;config.h: 35: TXSTAbits.TXEN = 1;
   579                           
   580                           ;incstack = 0
   581                           ; Regs used in _iniciar_uart: []
   582  079B  1683               	bsf	3,5	;RP0=1, select bank1
   583  079C  1303               	bcf	3,6	;RP1=0, select bank1
   584  079D  1698               	bsf	24,5	;volatile
   585                           
   586                           ;config.h: 36: RCSTAbits.SPEN = 1;
   587  079E  1283               	bcf	3,5	;RP0=0, select bank0
   588  079F  1303               	bcf	3,6	;RP1=0, select bank0
   589  07A0  1798               	bsf	24,7	;volatile
   590  07A1  0008               	return
   591  07A2                     __end_of_iniciar_uart:	
   592  007E                     btemp	set	126	;btemp
   593  007E                     wtemp0	set	126


Data Sizes:
    Strings     52
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 27
		 -> STR_2(CODE[27]), STR_1(CODE[25]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     115
                       _iniciar_uart
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              16    16      0     115
                                              1 COMMON     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _iniciar_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _iniciar_uart
   _printf
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Aug 30 12:41:52 2017

                      pc 0002                       l23 07A3                       fsr 0004  
                    l554 07AF                      l572 07E3                      l566 07D8  
                    l576 07ED                      fsr0 0004                     STR_1 0024  
                   STR_2 0009                     _main 07C6                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  _TXREG 0019                    _putch 07A2                    pclath 000A  
                  status 0003                    wtemp0 007E            ?_iniciar_uart 0070  
        __initialization 07FA             __end_of_main 07FA                   ??_main 0075  
                 ?_putch 0070           ??_iniciar_uart 0070                   _printf 07AA  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_putch 07AA  
                ??_putch 0070               __pmaintext 07C6                  ?_printf 0070  
   __end_of_iniciar_uart 07A2               __stringtab 0003                  __ptext1 07AA  
                __ptext2 07A2                  __ptext3 079B          __size_of_printf 001C  
   end_of_initialization 07FC                _RCSTAbits 0018                  printf@c 0073  
                printf@f 0074                _PORTCbits 0007                _TXSTAbits 0098  
  __size_of_iniciar_uart 0007           __end_of_printf 07C6      start_initialization 07FA  
           _iniciar_uart 079B                 ??_printf 0071             _estado_boton 0075  
            __pbssCOMMON 0075                ___latbits 0002                __pstrings 0003  
         __size_of_putch 0008                 _PIR1bits 000C              __stringbase 0008  
     __end_of__stringtab 0009            __size_of_main 0034                putch@dato 0070  
              stringcode 0003                 printf@ap 0072                 stringdir 0003  
               stringtab 0003  
