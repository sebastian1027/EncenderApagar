

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sat Sep 02 23:51:59 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 1.43
    12                           ; Generated 25/07/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  0105                     	;# 
   109  0107                     	;# 
   110  0108                     	;# 
   111  0109                     	;# 
   112  010C                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0187                     	;# 
   119  0188                     	;# 
   120  0189                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0007                     _PORTCbits	set	7
   124  0007                     _PORTC	set	7
   125  0006                     _PORTB	set	6
   126  0018                     _RCSTAbits	set	24
   127  0019                     _TXREG	set	25
   128  000C                     _PIR1bits	set	12
   129  0087                     _TRISC	set	135
   130  0086                     _TRISB	set	134
   131  0098                     _TXSTAbits	set	152
   132                           
   133                           	psect	cinit
   134  07F6                     start_initialization:	
   135                           ; #config settings
   136                           
   137  07F6                     __initialization:	
   138                           
   139                           ; Clear objects allocated to COMMON
   140  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
   141  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   142  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   143  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   144  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   145  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   146  07FC                     end_of_initialization:	
   147                           ;End of C runtime variable initialization code
   148                           
   149  07FC                     __end_of__initialization:	
   150  07FC  0183               	clrf	3
   151  07FD  120A  118A  2FC5   	ljmp	_main	;jump to C main() function
   152                           
   153                           	psect	bssCOMMON
   154  0070                     __pbssCOMMON:	
   155  0070                     _bandera:	
   156  0070                     	ds	2
   157  0072                     _pulso:	
   158  0072                     	ds	2
   159  0074                     _estado_boton:	
   160  0074                     	ds	2
   161                           
   162                           	psect	cstackCOMMON
   163  0000                     __pcstackCOMMON:	
   164  0000                     ?_iniciar_uart:	
   165  0000                     ??_iniciar_uart:	
   166                           ; 1 bytes @ 0x0
   167                           
   168  0000                     ?_main:	
   169                           ; 1 bytes @ 0x0
   170                           
   171  0000                     ??_main:	
   172                           ; 1 bytes @ 0x0
   173                           
   174                           
   175                           	psect	maintext
   176  07C5                     __pmaintext:	
   177                           ; 1 bytes @ 0x0
   178 ;;
   179 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   180 ;;
   181 ;; *************** function _main *****************
   182 ;; Defined at:
   183 ;;		line 17 in file "EncenderApagar.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;		None
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, status,2, status,0, pclath, cstack
   192 ;; Tracked objects:
   193 ;;		On entry : B00/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   197 ;;      Params:         0       0       0       0       0
   198 ;;      Locals:         0       0       0       0       0
   199 ;;      Temps:          0       0       0       0       0
   200 ;;      Totals:         0       0       0       0       0
   201 ;;Total ram usage:        0 bytes
   202 ;; Hardware stack levels required when called:    1
   203 ;; This function calls:
   204 ;;		_iniciar_uart
   205 ;; This function is called by:
   206 ;;		Startup code after reset
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           
   211                           ;psect for function _main
   212  07C5                     _main:	
   213                           
   214                           ;EncenderApagar.c: 18: iniciar_uart();
   215                           
   216                           ;incstack = 0
   217                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   218  07C5  120A  118A  27BE  120A  118A  	fcall	_iniciar_uart
   219                           
   220                           ;EncenderApagar.c: 19: TRISB = 0b00000000;
   221  07CA  1683               	bsf	3,5	;RP0=1, select bank1
   222  07CB  1303               	bcf	3,6	;RP1=0, select bank1
   223  07CC  0186               	clrf	6	;volatile
   224                           
   225                           ;EncenderApagar.c: 20: PORTB = 0;
   226  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   227  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   228  07CF  0186               	clrf	6	;volatile
   229                           
   230                           ;EncenderApagar.c: 21: TRISC = 1;
   231  07D0  3001               	movlw	1
   232  07D1  1683               	bsf	3,5	;RP0=1, select bank1
   233  07D2  1303               	bcf	3,6	;RP1=0, select bank1
   234  07D3  0087               	movwf	7	;volatile
   235                           
   236                           ;EncenderApagar.c: 22: PORTC = 0;
   237  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   238  07D5  1303               	bcf	3,6	;RP1=0, select bank0
   239  07D6  0187               	clrf	7	;volatile
   240  07D7                     l527:	
   241                           ;EncenderApagar.c: 26: while (1){
   242                           
   243                           
   244                           ;EncenderApagar.c: 28: if (PORTCbits.RC0 == 1 && bandera == 0){
   245  07D7  1C07               	btfss	7,0	;volatile
   246  07D8  2FE3               	goto	l39
   247  07D9  0870               	movf	_bandera,w
   248  07DA  0471               	iorwf	_bandera+1,w
   249  07DB  1D03               	btfss	3,2
   250  07DC  2FE3               	goto	l39
   251                           
   252                           ;EncenderApagar.c: 29: bandera = 1;
   253  07DD  3001               	movlw	1
   254  07DE  00F0               	movwf	_bandera
   255  07DF  3000               	movlw	0
   256  07E0  00F1               	movwf	_bandera+1
   257  07E1                     l40:	
   258                           ;EncenderApagar.c: 30: while(PORTCbits.RC0 == 1){}
   259                           
   260  07E1  1807               	btfsc	7,0	;volatile
   261  07E2  2FE1               	goto	l40
   262  07E3                     l39:	
   263                           
   264                           ;EncenderApagar.c: 31: }
   265                           ;EncenderApagar.c: 32: if (PORTCbits.RC0 == 1 && bandera == 1){
   266  07E3  1C07               	btfss	7,0	;volatile
   267  07E4  2FED               	goto	l537
   268  07E5  0370               	decf	_bandera,w
   269  07E6  0471               	iorwf	_bandera+1,w
   270  07E7  1D03               	btfss	3,2
   271  07E8  2FED               	goto	l537
   272                           
   273                           ;EncenderApagar.c: 33: bandera = 0;
   274  07E9  01F0               	clrf	_bandera
   275  07EA  01F1               	clrf	_bandera+1
   276  07EB                     l44:	
   277                           ;EncenderApagar.c: 34: while(PORTCbits.RC0 == 1){}
   278                           
   279  07EB  1807               	btfsc	7,0	;volatile
   280  07EC  2FEB               	goto	l44
   281  07ED                     l537:	
   282                           
   283                           ;EncenderApagar.c: 35: }
   284                           ;EncenderApagar.c: 37: if ( bandera == 1){
   285  07ED  0370               	decf	_bandera,w
   286  07EE  0471               	iorwf	_bandera+1,w
   287  07EF  1D03               	btfss	3,2
   288  07F0  2FF4               	goto	l541
   289                           
   290                           ;EncenderApagar.c: 38: PORTB = 0b11111111;
   291  07F1  30FF               	movlw	255
   292  07F2  0086               	movwf	6	;volatile
   293                           
   294                           ;EncenderApagar.c: 39: }
   295  07F3  2FD7               	goto	l527
   296  07F4                     l541:	
   297                           
   298                           ;EncenderApagar.c: 40: else{
   299                           ;EncenderApagar.c: 41: PORTB = 0b00000000;
   300  07F4  0186               	clrf	6	;volatile
   301  07F5  2FD7               	goto	l527
   302  07F6                     __end_of_main:	
   303                           
   304                           	psect	text1
   305  07BE                     __ptext1:	
   306 ;; *************** function _iniciar_uart *****************
   307 ;; Defined at:
   308 ;;		line 36 in file "config.h"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		None
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   322 ;;      Params:         0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0
   325 ;;      Totals:         0       0       0       0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels used:    1
   328 ;; This function calls:
   329 ;;		Nothing
   330 ;; This function is called by:
   331 ;;		_main
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           
   336                           ;psect for function _iniciar_uart
   337  07BE                     _iniciar_uart:	
   338                           
   339                           ;config.h: 37: TXSTAbits.TXEN = 1;
   340                           
   341                           ;incstack = 0
   342                           ; Regs used in _iniciar_uart: []
   343  07BE  1683               	bsf	3,5	;RP0=1, select bank1
   344  07BF  1303               	bcf	3,6	;RP1=0, select bank1
   345  07C0  1698               	bsf	24,5	;volatile
   346                           
   347                           ;config.h: 38: RCSTAbits.SPEN = 1;
   348  07C1  1283               	bcf	3,5	;RP0=0, select bank0
   349  07C2  1303               	bcf	3,6	;RP1=0, select bank0
   350  07C3  1798               	bsf	24,7	;volatile
   351  07C4  0008               	return
   352  07C5                     __end_of_iniciar_uart:	
   353  007E                     btemp	set	126	;btemp
   354  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                       _iniciar_uart
 ---------------------------------------------------------------------------------
 (1) _iniciar_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _iniciar_uart

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      0       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sat Sep 02 23:51:59 2017

                     l40 07E1                       l44 07EB                       l39 07E3  
                    l541 07F4                      l527 07D7                      l537 07ED  
                   _main 07C5                     btemp 007E                     start 0000  
                  ?_main 0000                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    _TXREG 0019  
                  _pulso 0072                    status 0003                    wtemp0 007E  
          ?_iniciar_uart 0000          __initialization 07F6             __end_of_main 07F6  
                 ??_main 0000           ??_iniciar_uart 0000  __end_of__initialization 07FC  
         __pcstackCOMMON 0000               __pmaintext 07C5     __end_of_iniciar_uart 07C5  
                _bandera 0070                  __ptext1 07BE     end_of_initialization 07FC  
              _RCSTAbits 0018                _PORTCbits 0007                _TXSTAbits 0098  
  __size_of_iniciar_uart 0007      start_initialization 07F6             _iniciar_uart 07BE  
           _estado_boton 0074              __pbssCOMMON 0070                ___latbits 0002  
               _PIR1bits 000C            __size_of_main 0031  
