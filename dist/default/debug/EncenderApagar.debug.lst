

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Aug 30 15:29:29 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.43
    15                           ; Generated 25/07/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0007                     _PORTCbits	set	7
   127  0007                     _PORTC	set	7
   128  0006                     _PORTB	set	6
   129  0018                     _RCSTAbits	set	24
   130  0019                     _TXREG	set	25
   131  000C                     _PIR1bits	set	12
   132  0087                     _TRISC	set	135
   133  0086                     _TRISB	set	134
   134  0098                     _TXSTAbits	set	152
   135                           
   136                           	psect	strings
   137  0003                     __pstrings:	
   138  0003                     stringtab:	
   139  0003                     __stringtab:	
   140  0003                     stringcode:	
   141                           ;	String table - string pointers are 1 byte each
   142                           
   143  0003                     stringdir:	
   144  0003  3000               	movlw	high stringdir
   145  0004  008A               	movwf	10
   146  0005  0804               	movf	4,w
   147  0006  0A84               	incf	4,f
   148  0007  0782               	addwf	2,f
   149  0008                     __stringbase:	
   150  0008  3400               	retlw	0
   151  0009                     __end_of__stringtab:	
   152  0009                     STR_1:	
   153  0009  344C               	retlw	76	;'L'
   154  000A  346F               	retlw	111	;'o'
   155  000B  3473               	retlw	115	;'s'
   156  000C  3420               	retlw	32	;' '
   157  000D  346C               	retlw	108	;'l'
   158  000E  3465               	retlw	101	;'e'
   159  000F  3464               	retlw	100	;'d'
   160  0010  3473               	retlw	115	;'s'
   161  0011  3420               	retlw	32	;' '
   162  0012  3465               	retlw	101	;'e'
   163  0013  3473               	retlw	115	;'s'
   164  0014  3474               	retlw	116	;'t'
   165  0015  3461               	retlw	97	;'a'
   166  0016  346E               	retlw	110	;'n'
   167  0017  3420               	retlw	32	;' '
   168  0018  3465               	retlw	101	;'e'
   169  0019  346E               	retlw	110	;'n'
   170  001A  3463               	retlw	99	;'c'
   171  001B  3465               	retlw	101	;'e'
   172  001C  346E               	retlw	110	;'n'
   173  001D  3464               	retlw	100	;'d'
   174  001E  3469               	retlw	105	;'i'
   175  001F  3464               	retlw	100	;'d'
   176  0020  346F               	retlw	111	;'o'
   177  0021  3473               	retlw	115	;'s'
   178  0022  340A               	retlw	10
   179  0023  3400               	retlw	0
   180                           
   181                           	psect	cinit
   182  07F8                     start_initialization:	
   183                           ; #config settings
   184                           
   185  07F8                     __initialization:	
   186                           
   187                           ; Clear objects allocated to COMMON
   188  07F8  01F5               	clrf	__pbssCOMMON& (0+127)
   189  07F9  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   190  07FA  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   191  07FB  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   192  07FC                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195  07FC                     __end_of__initialization:	
   196  07FC  0183               	clrf	3
   197  07FD  120A  118A  2FC2   	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	bssCOMMON
   200  0075                     __pbssCOMMON:	
   201  0075                     _cont:	
   202  0075                     	ds	2
   203  0077                     _estado_boton:	
   204  0077                     	ds	2
   205                           
   206                           	psect	cstackCOMMON
   207  0070                     __pcstackCOMMON:	
   208  0070                     ?_putch:	
   209  0070                     ??_putch:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0070                     ?_iniciar_uart:	
   213                           ; 1 bytes @ 0x0
   214                           
   215  0070                     ??_iniciar_uart:	
   216                           ; 1 bytes @ 0x0
   217                           
   218  0070                     ?_main:	
   219                           ; 1 bytes @ 0x0
   220                           
   221  0070                     ?_printf:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     putch@dato:	
   225                           ; 2 bytes @ 0x0
   226                           
   227                           
   228                           ; 1 bytes @ 0x0
   229  0070                     	ds	1
   230  0071                     ??_printf:	
   231                           
   232                           ; 1 bytes @ 0x1
   233  0071                     	ds	1
   234  0072                     printf@ap:	
   235                           
   236                           ; 1 bytes @ 0x2
   237  0072                     	ds	1
   238  0073                     printf@c:	
   239                           
   240                           ; 1 bytes @ 0x3
   241  0073                     	ds	1
   242  0074                     printf@f:	
   243                           
   244                           ; 1 bytes @ 0x4
   245  0074                     	ds	1
   246  0075                     ??_main:	
   247                           
   248                           	psect	maintext
   249  07C2                     __pmaintext:	
   250                           ; 1 bytes @ 0x5
   251 ;;
   252 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   253 ;;
   254 ;; *************** function _main *****************
   255 ;; Defined at:
   256 ;;		line 15 in file "EncenderApagar.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   265 ;; Tracked objects:
   266 ;;		On entry : B00/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   270 ;;      Params:         0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0
   272 ;;      Temps:          0       0       0       0       0
   273 ;;      Totals:         0       0       0       0       0
   274 ;;Total ram usage:        0 bytes
   275 ;; Hardware stack levels required when called:    2
   276 ;; This function calls:
   277 ;;		_iniciar_uart
   278 ;;		_printf
   279 ;; This function is called by:
   280 ;;		Startup code after reset
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           
   285                           ;psect for function _main
   286  07C2                     _main:	
   287                           
   288                           ;EncenderApagar.c: 16: iniciar_uart();
   289                           
   290                           ;incstack = 0
   291                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   292  07C2  120A  118A  2797  120A  118A  	fcall	_iniciar_uart
   293                           
   294                           ;EncenderApagar.c: 17: TRISB = 0b00000000;
   295  07C7  1683               	bsf	3,5	;RP0=1, select bank1
   296  07C8  1303               	bcf	3,6	;RP1=0, select bank1
   297  07C9  0186               	clrf	6	;volatile
   298                           
   299                           ;EncenderApagar.c: 18: PORTB = 0;
   300  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   301  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   302  07CC  0186               	clrf	6	;volatile
   303                           
   304                           ;EncenderApagar.c: 19: TRISC = 1;
   305  07CD  3001               	movlw	1
   306  07CE  1683               	bsf	3,5	;RP0=1, select bank1
   307  07CF  1303               	bcf	3,6	;RP1=0, select bank1
   308  07D0  0087               	movwf	7	;volatile
   309                           
   310                           ;EncenderApagar.c: 20: PORTC = 0;
   311  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   312  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   313  07D3  0187               	clrf	7	;volatile
   314  07D4                     l571:	
   315                           ;EncenderApagar.c: 22: while (1){
   316                           
   317                           
   318                           ;EncenderApagar.c: 26: if (PORTCbits.RC0 == 1){
   319  07D4  1C07               	btfss	7,0	;volatile
   320  07D5  2FE8               	goto	l581
   321                           
   322                           ;EncenderApagar.c: 27: estado_boton++;
   323  07D6  3001               	movlw	1
   324  07D7  07F7               	addwf	_estado_boton,f
   325  07D8  1803               	skipnc
   326  07D9  0AF8               	incf	_estado_boton+1,f
   327  07DA  3000               	movlw	0
   328  07DB  07F8               	addwf	_estado_boton+1,f
   329                           
   330                           ;EncenderApagar.c: 30: if (estado_boton == 1){
   331  07DC  0377               	decf	_estado_boton,w
   332  07DD  0478               	iorwf	_estado_boton+1,w
   333  07DE  1D03               	btfss	3,2
   334  07DF  2FE8               	goto	l581
   335                           
   336                           ;EncenderApagar.c: 31: PORTB = 0B11111111;
   337  07E0  30FF               	movlw	255
   338  07E1  0086               	movwf	6	;volatile
   339                           
   340                           ;EncenderApagar.c: 32: printf("Los leds estan encendidos\n");
   341  07E2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   342  07E3  120A  118A  27A6  120A  118A  	fcall	_printf
   343  07E8                     l581:	
   344                           
   345                           ;EncenderApagar.c: 34: }
   346                           ;EncenderApagar.c: 35: }
   347                           ;EncenderApagar.c: 36: if (PORTCbits.RC0 == 0){
   348  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   349  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   350  07EA  1807               	btfsc	7,0	;volatile
   351  07EB  2FD4               	goto	l571
   352                           
   353                           ;EncenderApagar.c: 37: estado_boton--;
   354  07EC  30FF               	movlw	255
   355  07ED  07F7               	addwf	_estado_boton,f
   356  07EE  1803               	skipnc
   357  07EF  0AF8               	incf	_estado_boton+1,f
   358  07F0  30FF               	movlw	255
   359  07F1  07F8               	addwf	_estado_boton+1,f
   360                           
   361                           ;EncenderApagar.c: 40: if (estado_boton == 0){
   362  07F2  0877               	movf	_estado_boton,w
   363  07F3  0478               	iorwf	_estado_boton+1,w
   364  07F4  1D03               	btfss	3,2
   365  07F5  2FD4               	goto	l571
   366                           
   367                           ;EncenderApagar.c: 41: PORTB = 0B00000000;
   368  07F6  0186               	clrf	6	;volatile
   369  07F7  2FD4               	goto	l571
   370  07F8                     __end_of_main:	
   371                           
   372                           	psect	text1
   373  07A6                     __ptext1:	
   374 ;; *************** function _printf *****************
   375 ;; Defined at:
   376 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;  f               1    wreg     PTR const unsigned char 
   379 ;;		 -> STR_1(27), 
   380 ;; Auto vars:     Size  Location     Type
   381 ;;  f               1    4[COMMON] PTR const unsigned char 
   382 ;;		 -> STR_1(27), 
   383 ;;  tmpval          4    0        struct .
   384 ;;  cp              2    0        PTR const unsigned char 
   385 ;;  len             2    0        unsigned int 
   386 ;;  val             2    0        unsigned int 
   387 ;;  c               1    3[COMMON] char 
   388 ;;  ap              1    2[COMMON] PTR void [1]
   389 ;;		 -> ?_printf(2), 
   390 ;;  flag            1    0        unsigned char 
   391 ;;  prec            1    0        char 
   392 ;; Return value:  Size  Location     Type
   393 ;;                  2   20[None  ] int 
   394 ;; Registers used:
   395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   401 ;;      Params:         0       0       0       0       0
   402 ;;      Locals:         3       0       0       0       0
   403 ;;      Temps:          1       0       0       0       0
   404 ;;      Totals:         4       0       0       0       0
   405 ;;Total ram usage:        4 bytes
   406 ;; Hardware stack levels used:    1
   407 ;; Hardware stack levels required when called:    1
   408 ;; This function calls:
   409 ;;		_putch
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           
   416                           ;psect for function _printf
   417  07A6                     _printf:	
   418                           
   419                           ;incstack = 0
   420                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   421                           ;printf@f stored from wreg
   422  07A6  00F4               	movwf	printf@f
   423                           
   424                           ;doprnt.c: 466: va_list ap;
   425                           ;doprnt.c: 499: signed char c;
   426                           ;doprnt.c: 506: signed char prec;
   427                           ;doprnt.c: 508: unsigned char flag;
   428                           ;doprnt.c: 523: union {
   429                           ;doprnt.c: 524: unsigned long vd;
   430                           ;doprnt.c: 525: double integ;
   431                           ;doprnt.c: 526: } tmpval;
   432                           ;doprnt.c: 528: unsigned int val;
   433                           ;doprnt.c: 529: unsigned len;
   434                           ;doprnt.c: 530: const char * cp;
   435                           ;doprnt.c: 533: *ap = __va_start();
   436  07A7  3070               	movlw	(low (?_printf| 0))& (0+255)
   437  07A8  00F1               	movwf	??_printf
   438  07A9  0871               	movf	??_printf,w
   439  07AA  00F2               	movwf	printf@ap
   440  07AB                     l559:	
   441                           ;doprnt.c: 543: }
   442                           ;doprnt.c: 1422: {
   443                           
   444                           ;doprnt.c: 542: continue;
   445                           
   446                           ;doprnt.c: 536: while(c = *f++) {
   447                           
   448  07AB  3001               	movlw	1
   449  07AC  07F4               	addwf	printf@f,f
   450  07AD  30FF               	movlw	-1
   451  07AE  0774               	addwf	printf@f,w
   452  07AF  0084               	movwf	4
   453  07B0  120A  118A  2003  120A  118A  	fcall	stringdir
   454  07B5  00F1               	movwf	??_printf
   455  07B6  0871               	movf	??_printf,w
   456  07B7  00F3               	movwf	printf@c
   457  07B8  0873               	movf	printf@c,w
   458  07B9  1903               	btfsc	3,2
   459  07BA  0008               	return
   460                           
   461                           ;doprnt.c: 540: {
   462                           ;doprnt.c: 541: (putch(c) );
   463  07BB  0873               	movf	printf@c,w
   464  07BC  120A  118A  279E  120A  118A  	fcall	_putch
   465  07C1  2FAB               	goto	l559
   466  07C2                     __end_of_printf:	
   467                           ;doprnt.c: 1469: }
   468                           ;doprnt.c: 1533: }
   469                           ;doprnt.c: 1540: return 0;
   470                           ;	Return value of _printf is never used
   471                           
   472                           
   473                           	psect	text2
   474  079E                     __ptext2:	
   475 ;; *************** function _putch *****************
   476 ;; Defined at:
   477 ;;		line 28 in file "config.h"
   478 ;; Parameters:    Size  Location     Type
   479 ;;  dato            1    wreg     unsigned char 
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  dato            1    0[COMMON] unsigned char 
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   491 ;;      Params:         0       0       0       0       0
   492 ;;      Locals:         1       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0
   494 ;;      Totals:         1       0       0       0       0
   495 ;;Total ram usage:        1 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; This function calls:
   498 ;;		Nothing
   499 ;; This function is called by:
   500 ;;		_printf
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           
   505                           ;psect for function _putch
   506  079E                     _putch:	
   507                           
   508                           ;incstack = 0
   509                           ; Regs used in _putch: [wreg]
   510                           ;putch@dato stored from wreg
   511  079E  00F0               	movwf	putch@dato
   512  079F                     l23:	
   513                           ;config.h: 30: continue;
   514                           
   515                           ;config.h: 29: while (! PIR1bits.TXIF)
   516                           
   517  079F  1283               	bcf	3,5	;RP0=0, select bank0
   518  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   519  07A1  1E0C               	btfss	12,4	;volatile
   520  07A2  2F9F               	goto	l23
   521                           
   522                           ;config.h: 31: TXREG = dato;
   523  07A3  0870               	movf	putch@dato,w
   524  07A4  0099               	movwf	25	;volatile
   525  07A5  0008               	return
   526  07A6                     __end_of_putch:	
   527                           
   528                           	psect	text3
   529  0797                     __ptext3:	
   530 ;; *************** function _iniciar_uart *****************
   531 ;; Defined at:
   532 ;;		line 34 in file "config.h"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		None
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0
   549 ;;      Totals:         0       0       0       0       0
   550 ;;Total ram usage:        0 bytes
   551 ;; Hardware stack levels used:    1
   552 ;; This function calls:
   553 ;;		Nothing
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           
   560                           ;psect for function _iniciar_uart
   561  0797                     _iniciar_uart:	
   562                           
   563                           ;config.h: 35: TXSTAbits.TXEN = 1;
   564                           
   565                           ;incstack = 0
   566                           ; Regs used in _iniciar_uart: []
   567  0797  1683               	bsf	3,5	;RP0=1, select bank1
   568  0798  1303               	bcf	3,6	;RP1=0, select bank1
   569  0799  1698               	bsf	24,5	;volatile
   570                           
   571                           ;config.h: 36: RCSTAbits.SPEN = 1;
   572  079A  1283               	bcf	3,5	;RP0=0, select bank0
   573  079B  1303               	bcf	3,6	;RP1=0, select bank0
   574  079C  1798               	bsf	24,7	;volatile
   575  079D  0008               	return
   576  079E                     __end_of_iniciar_uart:	
   577  007E                     btemp	set	126	;btemp
   578  007E                     wtemp0	set	126


Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 27
		 -> STR_1(CODE[27]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      88
                       _iniciar_uart
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              16    16      0      88
                                              1 COMMON     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _iniciar_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _iniciar_uart
   _printf
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Aug 30 15:29:29 2017

                      pc 0002                       l23 079F                       fsr 0004  
                    l571 07D4                      l581 07E8                      l559 07AB  
                    fsr0 0004                     STR_1 0009                     _cont 0075  
                   _main 07C2                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    _TXREG 0019  
                  _putch 079E                    pclath 000A                    status 0003  
                  wtemp0 007E            ?_iniciar_uart 0070          __initialization 07F8  
           __end_of_main 07F8                   ??_main 0075                   ?_putch 0070  
         ??_iniciar_uart 0070                   _printf 07A6  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_putch 07A6                  ??_putch 0070  
             __pmaintext 07C2                  ?_printf 0070     __end_of_iniciar_uart 079E  
             __stringtab 0003                  __ptext1 07A6                  __ptext2 079E  
                __ptext3 0797          __size_of_printf 001C     end_of_initialization 07FC  
              _RCSTAbits 0018                  printf@c 0073                  printf@f 0074  
              _PORTCbits 0007                _TXSTAbits 0098    __size_of_iniciar_uart 0007  
         __end_of_printf 07C2      start_initialization 07F8             _iniciar_uart 0797  
               ??_printf 0071             _estado_boton 0077              __pbssCOMMON 0075  
              ___latbits 0002                __pstrings 0003           __size_of_putch 0008  
               _PIR1bits 000C              __stringbase 0008       __end_of__stringtab 0009  
          __size_of_main 0036                putch@dato 0070                stringcode 0003  
               printf@ap 0072                 stringdir 0003                 stringtab 0003  
