

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue Aug 29 23:44:23 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.43
    14                           ; Generated 25/07/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0007                     _PORTCbits	set	7
   126  0007                     _PORTC	set	7
   127  0006                     _PORTB	set	6
   128  0018                     _RCSTAbits	set	24
   129  0019                     _TXREG	set	25
   130  000C                     _PIR1bits	set	12
   131  0087                     _TRISC	set	135
   132  0086                     _TRISB	set	134
   133  0098                     _TXSTAbits	set	152
   134                           
   135                           	psect	strings
   136  0003                     __pstrings:	
   137  0003                     stringtab:	
   138  0003                     __stringtab:	
   139  0003                     stringcode:	
   140                           ;	String table - string pointers are 1 byte each
   141                           
   142  0003                     stringdir:	
   143  0003  3000               	movlw	high stringdir
   144  0004  008A               	movwf	10
   145  0005  0804               	movf	4,w
   146  0006  0A84               	incf	4,f
   147  0007  0782               	addwf	2,f
   148  0008                     __stringbase:	
   149  0008  3400               	retlw	0
   150  0009                     __end_of__stringtab:	
   151  0009                     STR_2:	
   152  0009  344C               	retlw	76	;'L'
   153  000A  346F               	retlw	111	;'o'
   154  000B  3473               	retlw	115	;'s'
   155  000C  3420               	retlw	32	;' '
   156  000D  346C               	retlw	108	;'l'
   157  000E  3465               	retlw	101	;'e'
   158  000F  3464               	retlw	100	;'d'
   159  0010  3473               	retlw	115	;'s'
   160  0011  3420               	retlw	32	;' '
   161  0012  3465               	retlw	101	;'e'
   162  0013  3473               	retlw	115	;'s'
   163  0014  3474               	retlw	116	;'t'
   164  0015  3461               	retlw	97	;'a'
   165  0016  346E               	retlw	110	;'n'
   166  0017  3420               	retlw	32	;' '
   167  0018  3465               	retlw	101	;'e'
   168  0019  346E               	retlw	110	;'n'
   169  001A  3463               	retlw	99	;'c'
   170  001B  3465               	retlw	101	;'e'
   171  001C  346E               	retlw	110	;'n'
   172  001D  3464               	retlw	100	;'d'
   173  001E  3469               	retlw	105	;'i'
   174  001F  3464               	retlw	100	;'d'
   175  0020  346F               	retlw	111	;'o'
   176  0021  3473               	retlw	115	;'s'
   177  0022  340A               	retlw	10
   178  0023  3400               	retlw	0
   179  0024                     STR_1:	
   180  0024  344C               	retlw	76	;'L'
   181  0025  346F               	retlw	111	;'o'
   182  0026  3473               	retlw	115	;'s'
   183  0027  3420               	retlw	32	;' '
   184  0028  346C               	retlw	108	;'l'
   185  0029  3465               	retlw	101	;'e'
   186  002A  3464               	retlw	100	;'d'
   187  002B  3473               	retlw	115	;'s'
   188  002C  3420               	retlw	32	;' '
   189  002D  3465               	retlw	101	;'e'
   190  002E  3473               	retlw	115	;'s'
   191  002F  3474               	retlw	116	;'t'
   192  0030  3461               	retlw	97	;'a'
   193  0031  346E               	retlw	110	;'n'
   194  0032  3420               	retlw	32	;' '
   195  0033  3461               	retlw	97	;'a'
   196  0034  3470               	retlw	112	;'p'
   197  0035  3461               	retlw	97	;'a'
   198  0036  3467               	retlw	103	;'g'
   199  0037  3461               	retlw	97	;'a'
   200  0038  3464               	retlw	100	;'d'
   201  0039  346F               	retlw	111	;'o'
   202  003A  3473               	retlw	115	;'s'
   203  003B  340A               	retlw	10
   204  003C  3400               	retlw	0
   205                           
   206                           	psect	cinit
   207  07FC                     start_initialization:	
   208                           ; #config settings
   209                           
   210  07FC                     __initialization:	
   211  07FC                     end_of_initialization:	
   212                           ;End of C runtime variable initialization code
   213                           
   214  07FC                     __end_of__initialization:	
   215  07FC  0183               	clrf	3
   216  07FD  120A  118A  2FD2   	ljmp	_main	;jump to C main() function
   217                           
   218                           	psect	cstackCOMMON
   219  0070                     __pcstackCOMMON:	
   220  0070                     ?_putch:	
   221  0070                     ??_putch:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     ?_iniciar_uart:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ??_iniciar_uart:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ?_main:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ?_printf:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     putch@dato:	
   237                           ; 2 bytes @ 0x0
   238                           
   239                           
   240                           ; 1 bytes @ 0x0
   241  0070                     	ds	1
   242  0071                     ??_printf:	
   243                           
   244                           ; 1 bytes @ 0x1
   245  0071                     	ds	1
   246  0072                     printf@ap:	
   247                           
   248                           ; 1 bytes @ 0x2
   249  0072                     	ds	1
   250  0073                     printf@c:	
   251                           
   252                           ; 1 bytes @ 0x3
   253  0073                     	ds	1
   254  0074                     printf@f:	
   255                           
   256                           ; 1 bytes @ 0x4
   257  0074                     	ds	1
   258  0075                     ??_main:	
   259                           
   260                           	psect	maintext
   261  07D2                     __pmaintext:	
   262                           ; 1 bytes @ 0x5
   263 ;;
   264 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   265 ;;
   266 ;; *************** function _main *****************
   267 ;; Defined at:
   268 ;;		line 13 in file "EncenderApagar.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;		None
   271 ;; Auto vars:     Size  Location     Type
   272 ;;		None
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   277 ;; Tracked objects:
   278 ;;		On entry : B00/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   282 ;;      Params:         0       0       0       0       0
   283 ;;      Locals:         0       0       0       0       0
   284 ;;      Temps:          0       0       0       0       0
   285 ;;      Totals:         0       0       0       0       0
   286 ;;Total ram usage:        0 bytes
   287 ;; Hardware stack levels required when called:    2
   288 ;; This function calls:
   289 ;;		_iniciar_uart
   290 ;;		_printf
   291 ;; This function is called by:
   292 ;;		Startup code after reset
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           
   297                           ;psect for function _main
   298  07D2                     _main:	
   299                           
   300                           ;EncenderApagar.c: 14: iniciar_uart();
   301                           
   302                           ;incstack = 0
   303                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   304  07D2  120A  118A  27A7  120A  118A  	fcall	_iniciar_uart
   305                           
   306                           ;EncenderApagar.c: 15: TRISB = 00000000;
   307  07D7  1683               	bsf	3,5	;RP0=1, select bank1
   308  07D8  1303               	bcf	3,6	;RP1=0, select bank1
   309  07D9  0186               	clrf	6	;volatile
   310                           
   311                           ;EncenderApagar.c: 16: PORTB = 0;
   312  07DA  1283               	bcf	3,5	;RP0=0, select bank0
   313  07DB  1303               	bcf	3,6	;RP1=0, select bank0
   314  07DC  0186               	clrf	6	;volatile
   315                           
   316                           ;EncenderApagar.c: 17: TRISC = 1;
   317  07DD  3001               	movlw	1
   318  07DE  1683               	bsf	3,5	;RP0=1, select bank1
   319  07DF  1303               	bcf	3,6	;RP1=0, select bank1
   320  07E0  0087               	movwf	7	;volatile
   321                           
   322                           ;EncenderApagar.c: 18: PORTC = 0;
   323  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   324  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   325  07E3  0187               	clrf	7	;volatile
   326  07E4                     l559:	
   327                           ;EncenderApagar.c: 20: while (1){
   328                           
   329                           
   330                           ;EncenderApagar.c: 21: if (PORTCbits.RC0 == 0){
   331  07E4  1283               	bcf	3,5	;RP0=0, select bank0
   332  07E5  1303               	bcf	3,6	;RP1=0, select bank0
   333  07E6  1807               	btfsc	7,0	;volatile
   334  07E7  2FEF               	goto	l565
   335                           
   336                           ;EncenderApagar.c: 22: PORTB = 0B00000000;
   337  07E8  0186               	clrf	6	;volatile
   338                           
   339                           ;EncenderApagar.c: 23: printf("Los leds estan apagados\n");
   340  07E9  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   341  07EA  120A  118A  27B6  120A  118A  	fcall	_printf
   342  07EF                     l565:	
   343                           
   344                           ;EncenderApagar.c: 24: }
   345                           ;EncenderApagar.c: 26: if (PORTCbits.RC0 == 1){
   346  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   347  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   348  07F1  1C07               	btfss	7,0	;volatile
   349  07F2  2FE4               	goto	l559
   350                           
   351                           ;EncenderApagar.c: 27: PORTB = 0B11111111;
   352  07F3  30FF               	movlw	255
   353  07F4  0086               	movwf	6	;volatile
   354                           
   355                           ;EncenderApagar.c: 28: printf("Los leds estan encendidos\n");
   356  07F5  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   357  07F6  120A  118A  27B6  120A  118A  	fcall	_printf
   358  07FB  2FE4               	goto	l559
   359  07FC                     __end_of_main:	
   360                           
   361                           	psect	text1
   362  07B6                     __ptext1:	
   363 ;; *************** function _printf *****************
   364 ;; Defined at:
   365 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;  f               1    wreg     PTR const unsigned char 
   368 ;;		 -> STR_2(27), STR_1(25), 
   369 ;; Auto vars:     Size  Location     Type
   370 ;;  f               1    4[COMMON] PTR const unsigned char 
   371 ;;		 -> STR_2(27), STR_1(25), 
   372 ;;  tmpval          4    0        struct .
   373 ;;  cp              2    0        PTR const unsigned char 
   374 ;;  len             2    0        unsigned int 
   375 ;;  val             2    0        unsigned int 
   376 ;;  c               1    3[COMMON] char 
   377 ;;  ap              1    2[COMMON] PTR void [1]
   378 ;;		 -> ?_printf(2), 
   379 ;;  flag            1    0        unsigned char 
   380 ;;  prec            1    0        char 
   381 ;; Return value:  Size  Location     Type
   382 ;;                  2   20[None  ] int 
   383 ;; Registers used:
   384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : 0/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         3       0       0       0       0
   392 ;;      Temps:          1       0       0       0       0
   393 ;;      Totals:         4       0       0       0       0
   394 ;;Total ram usage:        4 bytes
   395 ;; Hardware stack levels used:    1
   396 ;; Hardware stack levels required when called:    1
   397 ;; This function calls:
   398 ;;		_putch
   399 ;; This function is called by:
   400 ;;		_main
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           
   405                           ;psect for function _printf
   406  07B6                     _printf:	
   407                           
   408                           ;incstack = 0
   409                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   410                           ;printf@f stored from wreg
   411  07B6  00F4               	movwf	printf@f
   412                           
   413                           ;doprnt.c: 466: va_list ap;
   414                           ;doprnt.c: 499: signed char c;
   415                           ;doprnt.c: 506: signed char prec;
   416                           ;doprnt.c: 508: unsigned char flag;
   417                           ;doprnt.c: 523: union {
   418                           ;doprnt.c: 524: unsigned long vd;
   419                           ;doprnt.c: 525: double integ;
   420                           ;doprnt.c: 526: } tmpval;
   421                           ;doprnt.c: 528: unsigned int val;
   422                           ;doprnt.c: 529: unsigned len;
   423                           ;doprnt.c: 530: const char * cp;
   424                           ;doprnt.c: 533: *ap = __va_start();
   425  07B7  3070               	movlw	(low (?_printf| 0))& (0+255)
   426  07B8  00F1               	movwf	??_printf
   427  07B9  0871               	movf	??_printf,w
   428  07BA  00F2               	movwf	printf@ap
   429  07BB                     l547:	
   430                           ;doprnt.c: 543: }
   431                           ;doprnt.c: 1422: {
   432                           
   433                           ;doprnt.c: 542: continue;
   434                           
   435                           ;doprnt.c: 536: while(c = *f++) {
   436                           
   437  07BB  3001               	movlw	1
   438  07BC  07F4               	addwf	printf@f,f
   439  07BD  30FF               	movlw	-1
   440  07BE  0774               	addwf	printf@f,w
   441  07BF  0084               	movwf	4
   442  07C0  120A  118A  2003  120A  118A  	fcall	stringdir
   443  07C5  00F1               	movwf	??_printf
   444  07C6  0871               	movf	??_printf,w
   445  07C7  00F3               	movwf	printf@c
   446  07C8  0873               	movf	printf@c,w
   447  07C9  1903               	btfsc	3,2
   448  07CA  0008               	return
   449                           
   450                           ;doprnt.c: 540: {
   451                           ;doprnt.c: 541: (putch(c) );
   452  07CB  0873               	movf	printf@c,w
   453  07CC  120A  118A  27AE  120A  118A  	fcall	_putch
   454  07D1  2FBB               	goto	l547
   455  07D2                     __end_of_printf:	
   456                           ;doprnt.c: 1469: }
   457                           ;doprnt.c: 1533: }
   458                           ;doprnt.c: 1540: return 0;
   459                           ;	Return value of _printf is never used
   460                           
   461                           
   462                           	psect	text2
   463  07AE                     __ptext2:	
   464 ;; *************** function _putch *****************
   465 ;; Defined at:
   466 ;;		line 28 in file "config.h"
   467 ;; Parameters:    Size  Location     Type
   468 ;;  dato            1    wreg     unsigned char 
   469 ;; Auto vars:     Size  Location     Type
   470 ;;  dato            1    0[COMMON] unsigned char 
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   480 ;;      Params:         0       0       0       0       0
   481 ;;      Locals:         1       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0
   483 ;;      Totals:         1       0       0       0       0
   484 ;;Total ram usage:        1 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; This function calls:
   487 ;;		Nothing
   488 ;; This function is called by:
   489 ;;		_printf
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           
   494                           ;psect for function _putch
   495  07AE                     _putch:	
   496                           
   497                           ;incstack = 0
   498                           ; Regs used in _putch: [wreg]
   499                           ;putch@dato stored from wreg
   500  07AE  00F0               	movwf	putch@dato
   501  07AF                     l23:	
   502                           ;config.h: 30: continue;
   503                           
   504                           ;config.h: 29: while (! PIR1bits.TXIF)
   505                           
   506  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   507  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   508  07B1  1E0C               	btfss	12,4	;volatile
   509  07B2  2FAF               	goto	l23
   510                           
   511                           ;config.h: 31: TXREG = dato;
   512  07B3  0870               	movf	putch@dato,w
   513  07B4  0099               	movwf	25	;volatile
   514  07B5  0008               	return
   515  07B6                     __end_of_putch:	
   516                           
   517                           	psect	text3
   518  07A7                     __ptext3:	
   519 ;; *************** function _iniciar_uart *****************
   520 ;; Defined at:
   521 ;;		line 34 in file "config.h"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		None
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   535 ;;      Params:         0       0       0       0       0
   536 ;;      Locals:         0       0       0       0       0
   537 ;;      Temps:          0       0       0       0       0
   538 ;;      Totals:         0       0       0       0       0
   539 ;;Total ram usage:        0 bytes
   540 ;; Hardware stack levels used:    1
   541 ;; This function calls:
   542 ;;		Nothing
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           
   549                           ;psect for function _iniciar_uart
   550  07A7                     _iniciar_uart:	
   551                           
   552                           ;config.h: 35: TXSTAbits.TXEN = 1;
   553                           
   554                           ;incstack = 0
   555                           ; Regs used in _iniciar_uart: []
   556  07A7  1683               	bsf	3,5	;RP0=1, select bank1
   557  07A8  1303               	bcf	3,6	;RP1=0, select bank1
   558  07A9  1698               	bsf	24,5	;volatile
   559                           
   560                           ;config.h: 36: RCSTAbits.SPEN = 1;
   561  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   562  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   563  07AC  1798               	bsf	24,7	;volatile
   564  07AD  0008               	return
   565  07AE                     __end_of_iniciar_uart:	
   566  007E                     btemp	set	126	;btemp
   567  007E                     wtemp0	set	126


Data Sizes:
    Strings     52
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 27
		 -> STR_2(CODE[27]), STR_1(CODE[25]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     115
                       _iniciar_uart
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              16    16      0     115
                                              1 COMMON     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _iniciar_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _iniciar_uart
   _printf
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Aug 29 23:44:23 2017

                      pc 0002                       l23 07AF                       fsr 0004  
                    l547 07BB                      l565 07EF                      l559 07E4  
                    fsr0 0004                     STR_1 0024                     STR_2 0009  
                   _main 07D2                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    _TXREG 0019  
                  _putch 07AE                    pclath 000A                    status 0003  
                  wtemp0 007E            ?_iniciar_uart 0070          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0075                   ?_putch 0070  
         ??_iniciar_uart 0070                   _printf 07B6  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_putch 07B6                  ??_putch 0070  
             __pmaintext 07D2                  ?_printf 0070     __end_of_iniciar_uart 07AE  
             __stringtab 0003                  __ptext1 07B6                  __ptext2 07AE  
                __ptext3 07A7          __size_of_printf 001C     end_of_initialization 07FC  
              _RCSTAbits 0018                  printf@c 0073                  printf@f 0074  
              _PORTCbits 0007                _TXSTAbits 0098    __size_of_iniciar_uart 0007  
         __end_of_printf 07D2      start_initialization 07FC             _iniciar_uart 07A7  
               ??_printf 0071                ___latbits 0002                __pstrings 0003  
         __size_of_putch 0008                 _PIR1bits 000C              __stringbase 0008  
     __end_of__stringtab 0009            __size_of_main 002A                putch@dato 0070  
              stringcode 0003                 printf@ap 0072                 stringdir 0003  
               stringtab 0003  
